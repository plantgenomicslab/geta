#!/opt/miniconda3/bin/perl
use strict;
use File::Basename;
use Cwd 'abs_path';

my $usage = <<USAGE;
Usage:
    perl $0 blastProgramType blastDB fastaFile evalue threads outPrefix outfmt
    7 parameters should be given, and the final result is outPrefix.xml or outPrefix.tab

For example:
    perl homolog_paraBlast blastp nr proteins.fa 1e-3 24 nr 5

USAGE
if (@ARGV != 7){die $usage}

my ($program, $db, $fasta, $evalue, $threads, $outPrefix, $outfmt) = @ARGV;
open IN, $fasta or die $!;
my ($seqID, @seqID, %seq, %length);
while (<IN>) {
    chomp;
    if (/^>(\S+)/) { $seqID = $1; push @seqID, $seqID; }
    else           { $seq{$seqID} .= $_; $length{$seqID} += length($_); }
}

mkdir "$outPrefix.tmp" unless -e "$outPrefix.tmp";
my %command;
foreach my $seq_id (@seqID) {
    $_ = $seq_id;
    s/\|/\\\|/;
    open FASTA, '>', "$outPrefix.tmp/$seq_id.fa" or die $!;
    print FASTA ">$seq_id\n$seq{$seq_id}\n";
    close FASTA;

    $command{"$program -query $outPrefix.tmp/$_.fa -db $db -evalue $evalue -num_threads 1 -max_target_seqs 20 -outfmt $outfmt -out $outPrefix.tmp/$_.out\n"} = 1;
}

open COM, '>', "command.blast.list" or die $!;
foreach (sort {$length{$b} <=> $length{$a}} keys %command) {
    print COM;
}
close COM;

my $geta_dir = abs_path(dirname(__FILE__));
$geta_dir =~ s/\/bin$//;

#my $cmdString = "ParaFly -c command.blast.list -CPU $threads 1> /dev/null";
my $cmdString = "hpc_cmds_GridRunner.pl --grid_conf $geta_dir/SLURM.geta.conf -c command.blast.list";

(system $cmdString) == 0 or die "Failed to excute: $cmdString\n";

if ($outfmt == 5) { open OUT, '>', "$outPrefix.xml" or die $! }
else              { open OUT, '>', "$outPrefix.tab" or die $! }

foreach (@seqID) {
    open IN, "$outPrefix.tmp/$_.out" or die $!;
    foreach (<IN>) {
        print OUT;
    }
}
